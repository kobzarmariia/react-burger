{"version":3,"sources":["components/UI/Input/Input.js","shared/utitlity.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["input","props","inputElement","inputClasses","invalid","shouldValidate","touched","push","elementType","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","label","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","checkoutSummary","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","ContactData","state","orderForm","name","type","placeholder","validation","valid","street","zipCode","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","setState","formElementsArray","this","id","config","form","onSubmit","formElement","Input","disabled","loading","Spinner","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","to","purchasedRedirect","purchased","path","match","component"],"mappings":"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","file":"static/js/3.125a66cb.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Input.css';\n\nconst input = props => {\n\tlet inputElement = null;\n\tconst inputClasses = ['InputElement'];\n\n\tif (props.invalid && props.shouldValidate && props.touched) {\n\t\tinputClasses.push('Invalid');\n\t}\n\n\tswitch (props.elementType) {\n\t\tcase 'input':\n\t\t\tinputElement = (\n\t\t\t\t<input\n\t\t\t\t\tclassName={inputClasses.join(' ')}\n\t\t\t\t\t{...props.elementConfig}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t/>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'textarea':\n\t\t\tinputElement = (\n\t\t\t\t<textarea\n\t\t\t\t\tclassName={inputClasses.join(' ')}\n\t\t\t\t\t{...props.elementConfig}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t/>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'select':\n\t\t\tinputElement = (\n\t\t\t\t<select className={inputClasses.join(' ')} value={props.value} onChange={props.changed}>\n\t\t\t\t\t{props.elementConfig.options.map(option => (\n\t\t\t\t\t\t<option key={option.value} value={option.value}>\n\t\t\t\t\t\t\t{option.displayValue}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tinputElement = (\n\t\t\t\t<input\n\t\t\t\t\tclassName={inputClasses.join(' ')}\n\t\t\t\t\t{...props.elementConfig}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t/>\n\t\t\t);\n\t}\n\n\treturn (\n\t\t<div className={'Input'}>\n\t\t\t<label className={'Label'}>{props.label}</label>\n\t\t\t{inputElement}\n\t\t</div>\n\t);\n};\n\nexport default input;\n","export const checkValidity = (value, rules) => {\n\tlet isValid = true;\n\tif (!rules) {\n\t\treturn true;\n\t}\n\n\tif (rules.required) {\n\t\tisValid = value.trim() !== '' && isValid;\n\t}\n\n\tif (rules.minLength) {\n\t\tisValid = value.length >= rules.minLength && isValid;\n\t}\n\n\tif (rules.maxLength) {\n\t\tisValid = value.length <= rules.maxLength && isValid;\n\t}\n\n\tif (rules.isEmail) {\n\t\tconst pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\t\tisValid = pattern.test(value) && isValid;\n\t}\n\n\tif (rules.isNumeric) {\n\t\tconst pattern = /^\\d+$/;\n\t\tisValid = pattern.test(value) && isValid;\n\t}\n\n\treturn isValid;\n};\n","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport './CheckoutSummary.css';\n\nconst checkoutSummary = props => {\n\treturn (\n\t\t<div className=\"CheckoutSummary\">\n\t\t\t<h1>We hope it tastes well!</h1>\n\t\t\t<div style={{ width: '100%', margin: 'auto' }}>\n\t\t\t\t<Burger ingredients={props.ingredients} />\n\t\t\t</div>\n\t\t\t<Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\n\t\t\t\tCANCEL\n\t\t\t</Button>\n\t\t\t<Button btnType=\"Success\" clicked={props.checkoutContinued}>\n\t\t\t\tCONTINUE\n\t\t\t</Button>\n\t\t</div>\n\t);\n};\n\nexport default checkoutSummary;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Input from '../../../components/UI/Input/Input';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../../actions';\nimport { checkValidity } from '../../../shared/utitlity';\n\nclass ContactData extends Component {\n\tstate = {\n\t\torderForm: {\n\t\t\tname: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tplaceholder: 'Your Name',\n\t\t\t\t},\n\t\t\t\tvalue: '',\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\t\t\tstreet: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tplaceholder: 'Street',\n\t\t\t\t},\n\t\t\t\tvalue: '',\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\t\t\tzipCode: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tplaceholder: 'ZIP Code',\n\t\t\t\t},\n\t\t\t\tvalue: '',\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminLength: 5,\n\t\t\t\t\tmaxLength: 5,\n\t\t\t\t\tisNumeric: true,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\t\t\tcountry: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tplaceholder: 'Country',\n\t\t\t\t},\n\t\t\t\tvalue: '',\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\t\t\temail: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'email',\n\t\t\t\t\tplaceholder: 'Your E-Mail',\n\t\t\t\t},\n\t\t\t\tvalue: '',\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tisEmail: true,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\t\t\tdeliveryMethod: {\n\t\t\t\telementType: 'select',\n\t\t\t\telementConfig: {\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{ value: 'fastest', displayValue: 'Fastest' },\n\t\t\t\t\t\t{ value: 'cheapest', displayValue: 'Cheapest' },\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tvalue: 'fastest',\n\t\t\t\tvalidation: {},\n\t\t\t\tvalid: true,\n\t\t\t},\n\t\t},\n\t\tformIsValid: false,\n\t};\n\n\torderHandler = event => {\n\t\tevent.preventDefault();\n\t\tconst formData = {};\n\t\tfor (let formElementIdentifier in this.state.orderForm) {\n\t\t\tformData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n\t\t}\n\t\tconst order = {\n\t\t\tingredients: this.props.ings,\n\t\t\tprice: this.props.price,\n\t\t\torderData: formData,\n\t\t\tuserId: this.props.userId,\n\t\t};\n\n\t\tthis.props.onOrderBurger(order, this.props.token);\n\t};\n\n\tinputChangedHandler = (event, inputIdentifier) => {\n\t\tconst updatedOrderForm = {\n\t\t\t...this.state.orderForm,\n\t\t};\n\t\tconst updatedFormElement = {\n\t\t\t...updatedOrderForm[inputIdentifier],\n\t\t};\n\t\tupdatedFormElement.value = event.target.value;\n\t\tupdatedFormElement.valid = checkValidity(\n\t\t\tupdatedFormElement.value,\n\t\t\tupdatedFormElement.validation\n\t\t);\n\t\tupdatedFormElement.touched = true;\n\t\tupdatedOrderForm[inputIdentifier] = updatedFormElement;\n\n\t\tlet formIsValid = true;\n\t\tfor (let inputIdentifier in updatedOrderForm) {\n\t\t\tformIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n\t\t}\n\t\tthis.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\n\t};\n\n\trender() {\n\t\tconst formElementsArray = [];\n\t\tfor (let key in this.state.orderForm) {\n\t\t\tformElementsArray.push({\n\t\t\t\tid: key,\n\t\t\t\tconfig: this.state.orderForm[key],\n\t\t\t});\n\t\t}\n\t\tlet form = (\n\t\t\t<form onSubmit={this.orderHandler}>\n\t\t\t\t{formElementsArray.map(formElement => (\n\t\t\t\t\t<Input\n\t\t\t\t\t\tkey={formElement.id}\n\t\t\t\t\t\telementType={formElement.config.elementType}\n\t\t\t\t\t\telementConfig={formElement.config.elementConfig}\n\t\t\t\t\t\tvalue={formElement.config.value}\n\t\t\t\t\t\tinvalid={!formElement.config.valid}\n\t\t\t\t\t\tshouldValidate={formElement.config.validation}\n\t\t\t\t\t\ttouched={formElement.config.touched}\n\t\t\t\t\t\tchanged={event => this.inputChangedHandler(event, formElement.id)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t\t<Button btnType=\"Success\" disabled={!this.state.formIsValid}>\n\t\t\t\t\tORDER\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t);\n\t\tif (this.props.loading) {\n\t\t\tform = <Spinner />;\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"ContactData\">\n\t\t\t\t<h4>Enter your Contact Data</h4>\n\t\t\t\t{form}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tings: state.burgerBuilder.ingredients,\n\t\tprice: state.burgerBuilder.totalPrice,\n\t\tloading: state.order.loading,\n\t\ttoken: state.auth.token,\n\t\tuserId: state.auth.userId,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token)),\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(withErrorHandler(ContactData, axios));\n","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n\tcheckoutCancelledHandler = () => {\n\t\tthis.props.history.goBack();\n\t};\n\n\tcheckoutContinuedHandler = () => {\n\t\tthis.props.history.replace('/checkout/contact-data');\n\t};\n\n\trender() {\n\t\tlet summary = <Redirect to=\"/\" />;\n\t\tif (this.props.ings) {\n\t\t\tconst purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\n\t\t\tsummary = (\n\t\t\t\t<div>\n\t\t\t\t\t{purchasedRedirect}\n\t\t\t\t\t<CheckoutSummary\n\t\t\t\t\t\tingredients={this.props.ings}\n\t\t\t\t\t\tcheckoutCancelled={this.checkoutCancelledHandler}\n\t\t\t\t\t\tcheckoutContinued={this.checkoutContinuedHandler}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path={this.props.match.path + '/contact-data'} component={ContactData} />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn summary;\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tings: state.burgerBuilder.ingredients,\n\t\tpurchased: state.order.purchased,\n\t};\n};\n\nexport default connect(mapStateToProps)(Checkout);\n"],"sourceRoot":""}