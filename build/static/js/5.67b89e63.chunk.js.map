{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"gNAyCeA,G,OArCD,SAAAC,GACb,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAChCA,EAAYE,KAAK,CAChBC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI5B,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACxC,OACC,0BACCC,MAAO,CACNC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEVC,IAAKP,EAAGJ,MAEPI,EAAGJ,KAVL,KAUaI,EAAGH,OAVhB,QAeF,OACC,yBAAKW,UAAU,SACd,2CAAiBV,GACjB,qCACQ,uCAAaW,OAAOC,WAAWlB,EAAMmB,OAAOC,QAAQ,Q,gCC1BzDC,E,4LAEJC,KAAKtB,MAAMuB,cAAcD,KAAKtB,MAAMwB,MAAOF,KAAKtB,MAAMyB,U,+BAItD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAMb,OALKL,KAAKtB,MAAM4B,UACfF,EAASJ,KAAKtB,MAAM0B,OAAOnB,KAAI,SAAAR,GAAK,OACnC,kBAAC,EAAD,CAAOgB,IAAKhB,EAAM8B,GAAI5B,YAAaF,EAAME,YAAakB,MAAOpB,EAAMoB,YAG9D,6BAAMO,O,GAZMI,aA+BNC,uBAfS,SAAAC,GACvB,MAAO,CACNN,OAAQM,EAAMjC,MAAM2B,OACpBE,QAASI,EAAMjC,MAAM6B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAIM,SAAAS,GAC1B,MAAO,CACNX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAASC,IAAoBX,EAAOC,QAIzDM,CAGbK,YAAiBf,EAAQgB","file":"static/js/5.67b89e63.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Order.css';\n\nconst order = props => {\n\tconst ingredients = [];\n\n\tfor (let ingredientName in props.ingredients) {\n\t\tingredients.push({\n\t\t\tname: ingredientName,\n\t\t\tamount: props.ingredients[ingredientName],\n\t\t});\n\t}\n\n\tconst ingredientOutput = ingredients.map(ig => {\n\t\treturn (\n\t\t\t<span\n\t\t\t\tstyle={{\n\t\t\t\t\ttextTransform: 'capitalize',\n\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\tmargin: '0 8px',\n\t\t\t\t\tborder: '1px solid #ccc',\n\t\t\t\t\tpadding: '5px',\n\t\t\t\t}}\n\t\t\t\tkey={ig.name}\n\t\t\t>\n\t\t\t\t{ig.name} ({ig.amount})\n\t\t\t</span>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div className=\"Order\">\n\t\t\t<p>Ingredients: {ingredientOutput}</p>\n\t\t\t<p>\n\t\t\t\tPrice: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong>\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default order;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../actions';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.onFetchOrders(this.props.token, this.props.userId);\n\t}\n\n\trender() {\n\t\tlet orders = <Spinner />;\n\t\tif (!this.props.loading) {\n\t\t\torders = this.props.orders.map(order => (\n\t\t\t\t<Order key={order.id} ingredients={order.ingredients} price={order.price} />\n\t\t\t));\n\t\t}\n\t\treturn <div>{orders}</div>;\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\torders: state.order.orders,\n\t\tloading: state.order.loading,\n\t\ttoken: state.auth.token,\n\t\tuserId: state.auth.userId,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(withErrorHandler(Orders, axios));\n"],"sourceRoot":""}